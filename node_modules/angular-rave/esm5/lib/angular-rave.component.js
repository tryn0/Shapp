/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { AngularRaveService } from './angular-rave.service';
/**
 * @record
 */
function MyWindow() { }
if (false) {
    /** @type {?} */
    MyWindow.prototype.getpaidSetup;
}
var AngularRaveComponent = /** @class */ (function () {
    function AngularRaveComponent(raveService) {
        this.raveService = raveService;
        this.onclose = new EventEmitter();
        this.callback = new EventEmitter();
        this.init = new EventEmitter();
        this._raveOptions = {};
    }
    /**
     * @return {?}
     */
    AngularRaveComponent.prototype.pay = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var errorExists;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        errorExists = false;
                        if (this.raveOptions && Object.keys(this.raveOptions).length > 1) {
                            errorExists = this.checkInvalidOptions(this.raveOptions);
                            this.insertRaveOptions(this.raveOptions);
                        }
                        else {
                            errorExists = this.checkInvalidOptions(this);
                            this.insertRaveOptions(this);
                        }
                        if (errorExists) {
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, this.raveService.loadScript()];
                    case 1:
                        _a.sent();
                        this.paymentSetup = window.getpaidSetup(this._raveOptions);
                        if (this.init.observers.length > 0) {
                            this.init.emit(this.paymentSetup);
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} object
     * @return {?}
     */
    AngularRaveComponent.prototype.checkInvalidOptions = /**
     * @param {?} object
     * @return {?}
     */
    function (object) {
        /** @type {?} */
        var optionsInvalid = this.raveService.isInvalidOptions(object);
        if (optionsInvalid) {
            console.error(optionsInvalid);
        }
        return optionsInvalid !== '';
    };
    /**
     * @param {?} object
     * @return {?}
     */
    AngularRaveComponent.prototype.insertRaveOptions = /**
     * @param {?} object
     * @return {?}
     */
    function (object) {
        var _this = this;
        this._raveOptions = this.raveService.createRaveOptionsObject(object);
        if (this.onclose) {
            this._raveOptions.onclose = (/**
             * @return {?}
             */
            function () { return _this.onclose.emit(); });
        }
        this._raveOptions.callback = (/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            _this.onclose.emit(res);
            if (_this.autoClose) {
                _this.paymentSetup.close();
            }
        });
    };
    /**
     * @return {?}
     */
    AngularRaveComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.pay();
    };
    AngularRaveComponent.decorators = [
        { type: Component, args: [{
                    selector: 'angular-rave',
                    // tslint:disable-line
                    template: "<ng-content></ng-content>"
                }] }
    ];
    /** @nocollapse */
    AngularRaveComponent.ctorParameters = function () { return [
        { type: AngularRaveService }
    ]; };
    AngularRaveComponent.propDecorators = {
        amount: [{ type: Input }],
        autoClose: [{ type: Input }],
        country: [{ type: Input }],
        currency: [{ type: Input }],
        custom_description: [{ type: Input }],
        custom_logo: [{ type: Input }],
        custom_title: [{ type: Input }],
        customer_email: [{ type: Input }],
        customer_firstname: [{ type: Input }],
        customer_lastname: [{ type: Input }],
        customer_phone: [{ type: Input }],
        integrity_hash: [{ type: Input }],
        meta: [{ type: Input }],
        pay_button_text: [{ type: Input }],
        payment_method: [{ type: Input }],
        PBFPubKey: [{ type: Input }],
        raveOptions: [{ type: Input }],
        redirect_url: [{ type: Input }],
        subaccount: [{ type: Input }],
        txref: [{ type: Input }],
        onclose: [{ type: Output }],
        callback: [{ type: Output }],
        init: [{ type: Output }]
    };
    return AngularRaveComponent;
}());
export { AngularRaveComponent };
if (false) {
    /** @type {?} */
    AngularRaveComponent.prototype.amount;
    /** @type {?} */
    AngularRaveComponent.prototype.autoClose;
    /** @type {?} */
    AngularRaveComponent.prototype.country;
    /** @type {?} */
    AngularRaveComponent.prototype.currency;
    /** @type {?} */
    AngularRaveComponent.prototype.custom_description;
    /** @type {?} */
    AngularRaveComponent.prototype.custom_logo;
    /** @type {?} */
    AngularRaveComponent.prototype.custom_title;
    /** @type {?} */
    AngularRaveComponent.prototype.customer_email;
    /** @type {?} */
    AngularRaveComponent.prototype.customer_firstname;
    /** @type {?} */
    AngularRaveComponent.prototype.customer_lastname;
    /** @type {?} */
    AngularRaveComponent.prototype.customer_phone;
    /** @type {?} */
    AngularRaveComponent.prototype.integrity_hash;
    /** @type {?} */
    AngularRaveComponent.prototype.meta;
    /** @type {?} */
    AngularRaveComponent.prototype.pay_button_text;
    /** @type {?} */
    AngularRaveComponent.prototype.payment_method;
    /** @type {?} */
    AngularRaveComponent.prototype.PBFPubKey;
    /** @type {?} */
    AngularRaveComponent.prototype.raveOptions;
    /** @type {?} */
    AngularRaveComponent.prototype.redirect_url;
    /** @type {?} */
    AngularRaveComponent.prototype.subaccount;
    /** @type {?} */
    AngularRaveComponent.prototype.txref;
    /** @type {?} */
    AngularRaveComponent.prototype.onclose;
    /** @type {?} */
    AngularRaveComponent.prototype.callback;
    /** @type {?} */
    AngularRaveComponent.prototype.init;
    /**
     * @type {?}
     * @private
     */
    AngularRaveComponent.prototype._raveOptions;
    /**
     * @type {?}
     * @private
     */
    AngularRaveComponent.prototype.paymentSetup;
    /**
     * @type {?}
     * @private
     */
    AngularRaveComponent.prototype.raveService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1yYXZlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcmF2ZS8iLCJzb3VyY2VzIjpbImxpYi9hbmd1bGFyLXJhdmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUUvRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7OztBQUU1RCx1QkFFQzs7O0lBREMsZ0NBQXlFOztBQUszRTtJQWdDRSw4QkFBb0IsV0FBK0I7UUFBL0IsZ0JBQVcsR0FBWCxXQUFXLENBQW9CO1FBTnpDLFlBQU8sR0FBdUIsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUN2RCxhQUFRLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7UUFDNUQsU0FBSSxHQUF5QixJQUFJLFlBQVksRUFBVSxDQUFDO1FBQzFELGlCQUFZLEdBQWdDLEVBQUUsQ0FBQztJQUdBLENBQUM7Ozs7SUFFbEQsa0NBQUc7OztJQUFUOzs7Ozs7d0JBQ00sV0FBVyxHQUFHLEtBQUs7d0JBQ3ZCLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFOzRCQUNoRSxXQUFXLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzs0QkFDekQsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzt5QkFDMUM7NkJBQU07NEJBQ0wsV0FBVyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQzs0QkFDN0MsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO3lCQUM5Qjt3QkFDRCxJQUFJLFdBQVcsRUFB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b250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFByaXZhdGVSYXZlT3B0aW9ucywgUGF5bWVudFNldHVwLCBSYXZlT3B0aW9ucyB9IGZyb20gJy4vcmF2ZS1vcHRpb25zJztcbmltcG9ydCB7IEFuZ3VsYXJSYXZlU2VydmljZSB9IGZyb20gJy4vYW5ndWxhci1yYXZlLnNlcnZpY2UnO1xuXG5pbnRlcmZhY2UgTXlXaW5kb3cgZXh0ZW5kcyBXaW5kb3cge1xuICBnZXRwYWlkU2V0dXA6IChyYXZlT3B0aW9uczogUGFydGlhbDxQcml2YXRlUmF2ZU9wdGlvbnM+KSA9PiBQYXltZW50U2V0dXA7XG59XG5cbmRlY2xhcmUgdmFyIHdpbmRvdzogTXlXaW5kb3c7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FuZ3VsYXItcmF2ZScsIC8vIHRzbGludDpkaXNhYmxlLWxpbmVcbiAgdGVtcGxhdGU6IGA8bmctY29udGVudD48L25nLWNvbnRlbnQ+YFxufSlcblxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJSYXZlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgYW1vdW50OiBudW1iZXI7XG4gIEBJbnB1dCgpIGF1dG9DbG9zZTogYm9vbGVhbjtcbiAgQElucHV0KCkgY291bnRyeTogc3RyaW5nO1xuICBASW5wdXQoKSBjdXJyZW5jeTogc3RyaW5nO1xuICBASW5wdXQoKSBjdXN0b21fZGVzY3JpcHRpb246IHN0cmluZztcbiAgQElucHV0KCkgY3VzdG9tX2xvZ286IHN0cmluZztcbiAgQElucHV0KCkgY3VzdG9tX3RpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGN1c3RvbWVyX2VtYWlsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGN1c3RvbWVyX2ZpcnN0bmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBjdXN0b21lcl9sYXN0bmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBjdXN0b21lcl9waG9uZTogc3RyaW5nO1xuICBASW5wdXQoKSBpbnRlZ3JpdHlfaGFzaDogc3RyaW5nO1xuICBASW5wdXQoKSBtZXRhOiBhbnk7XG4gIEBJbnB1dCgpIHBheV9idXR0b25fdGV4dDogc3RyaW5nO1xuICBASW5wdXQoKSBwYXltZW50X21ldGhvZDogc3RyaW5nO1xuICBASW5wdXQoKSBQQkZQdWJLZXk6IHN0cmluZztcbiAgQElucHV0KCkgcmF2ZU9wdGlvbnM6IFBhcnRpYWw8UHJpdmF0ZVJhdmVPcHRpb25zPjtcbiAgQElucHV0KCkgcmVkaXJlY3RfdXJsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHN1YmFjY291bnQ6IHsgaWQ6IHN0cmluZywgdHJhbnNhY3Rpb25fc3BsaXRfcmF0aW86IHN0cmluZyB9W107XG4gIEBJbnB1dCgpIHR4cmVmOiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBvbmNsb3NlOiBFdmVudEVtaXR0ZXI8dm9pZD4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG4gIEBPdXRwdXQoKSBjYWxsYmFjazogRXZlbnRFbWl0dGVyPG9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyPG9iamVjdD4oKTtcbiAgQE91dHB1dCgpIGluaXQ6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcjxvYmplY3Q+KCk7XG4gIHByaXZhdGUgX3JhdmVPcHRpb25zOiBQYXJ0aWFsPFByaXZhdGVSYXZlT3B0aW9ucz4gPSB7fTtcbiAgcHJpdmF0ZSBwYXltZW50U2V0dXA6IFBheW1lbnRTZXR1cDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJhdmVTZXJ2aWNlOiBBbmd1bGFyUmF2ZVNlcnZpY2UpIHsgfVxuXG4gIGFzeW5jIHBheSgpIHtcbiAgICBsZXQgZXJyb3JFeGlzdHMgPSBmYWxzZTtcbiAgICBpZiAodGhpcy5yYXZlT3B0aW9ucyAmJiBPYmplY3Qua2V5cyh0aGlzLnJhdmVPcHRpb25zKS5sZW5ndGggPiAxKSB7XG4gICAgICBlcnJvckV4aXN0cyA9IHRoaXMuY2hlY2tJbnZhbGlkT3B0aW9ucyh0aGlzLnJhdmVPcHRpb25zKTtcbiAgICAgIHRoaXMuaW5zZXJ0UmF2ZU9wdGlvbnModGhpcy5yYXZlT3B0aW9ucyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9yRXhpc3RzID0gdGhpcy5jaGVja0ludmFsaWRPcHRpb25zKHRoaXMpO1xuICAgICAgdGhpcy5pbnNlcnRSYXZlT3B0aW9ucyh0aGlzKTtcbiAgICB9XG4gICAgaWYgKGVycm9yRXhpc3RzKSB7IHJldHVybjsgfVxuICAgIGF3YWl0IHRoaXMucmF2ZVNlcnZpY2UubG9hZFNjcmlwdCgpO1xuICAgIHRoaXMucGF5bWVudFNldHVwID0gd2luZG93LmdldHBhaWRTZXR1cCh0aGlzLl9yYXZlT3B0aW9ucyk7XG4gICAgaWYgKHRoaXMuaW5pdC5vYnNlcnZlcnMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5pbml0LmVtaXQodGhpcy5wYXltZW50U2V0dXApO1xuICAgIH1cbiAgfVxuXG4gIGNoZWNrSW52YWxpZE9wdGlvbnMob2JqZWN0OiBQYXJ0aWFsPFJhdmVPcHRpb25zPik6IGJvb2xlYW4ge1xuICAgIGNvbnN0IG9wdGlvbnNJbnZhbGlkID0gdGhpcy5yYXZlU2VydmljZS5pc0ludmFsaWRPcHRpb25zKG9iamVjdCk7XG4gICAgaWYgKG9wdGlvbnNJbnZhbGlkKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG9wdGlvbnNJbnZhbGlkKTtcbiAgICB9XG4gICAgcmV0dXJuIG9wdGlvbnNJbnZhbGlkICE9PSAnJztcbiAgfVxuXG4gIGluc2VydFJhdmVPcHRpb25zKG9iamVjdDogUGFydGlhbDxSYXZlT3B0aW9ucz4pIHtcbiAgICB0aGlzLl9yYXZlT3B0aW9ucyA9IHRoaXMucmF2ZVNlcnZpY2UuY3JlYXRlUmF2ZU9wdGlvbnNPYmplY3Qob2JqZWN0KTtcbiAgICBpZiAodGhpcy5vbmNsb3NlKSB7IHRoaXMuX3JhdmVPcHRpb25zLm9uY2xvc2UgPSAoKSA9PiB0aGlzLm9uY2xvc2UuZW1pdCgpOyB9XG4gICAgdGhpcy5fcmF2ZU9wdGlvbnMuY2FsbGJhY2sgPSAocmVzKSA9PiB7XG4gICAgICB0aGlzLm9uY2xvc2UuZW1pdChyZXMpO1xuICAgICAgaWYgKHRoaXMuYXV0b0Nsb3NlKSB7XG4gICAgICAgIHRoaXMucGF5bWVudFNldHVwLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucGF5KCk7XG4gIH1cbn1cbiJdfQ==