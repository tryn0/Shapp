{"version":3,"sources":["src/material/material-list.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","list","common","core","tslib","rxjs","operators","cdk","a11y","coercion","collections","keycodes","forms","divider","this","core$1","_MatListMixinBase","mixinDisableRipple","MatListBase","_MatListItemMixinBase","MatListItemBase","MatNavList","_super","_this","apply","arguments","_stateChanges","Subject","__extends","prototype","ngOnChanges","next","ngOnDestroy","complete","decorators","type","Component","args","selector","exportAs","host","role","class","template","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","MatList","_elementRef","call","_getListType","nativeElement","classList","add","nodeName","toLowerCase","ctorParameters","ElementRef","MatListAvatarCssMatStyler","Directive","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_element","_changeDetectorRef","navList","_isInteractiveList","_destroyed","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","takeUntil","subscribe","markForCheck","ngAfterContentInit","setLines","_lines","_isRippleDisabled","disableRipple","[class.mat-list-item-avatar]","[class.mat-list-item-with-avatar]","ChangeDetectorRef","Optional","propDecorators","ContentChildren","MatLine","descendants","_avatar","ContentChild","_icon","_MatSelectionListMixinBase","MatSelectionListBase","_MatListOptionMixinBase","MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSelectionList","multi","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_disabled","_hasFocus","checkboxPosition","_inputsInitialized","Object","defineProperty","get","_color","color","set","newValue","enumerable","configurable","_value","selected","value","disabled","coerceBooleanProperty","selectedOptions","isSelected","_setSelected","_reportValueChange","ngOnInit","some","compareWith","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","toggle","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","_markForCheck","(focus)","(blur)","(click)","[class.mat-list-item-disabled]","[class.mat-primary]","[class.mat-accent]","[class.mat-warn]","[attr.aria-selected]","[attr.aria-disabled]","[attr.tabindex]","Inject","ViewChild","Input","tabIndex","selectionChange","EventEmitter","a1","a2","SelectionModel","_tabIndex","_onChange","_","_markOptionsForCheck","_keyManager","FocusKeyManager","options","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","changes","startWith","_updateTabIndex","changed","event","e_1","_a","e_2","_b","added","_c","__values","_d","done","e_1_1","error","return","removed","_e","_f","e_2_1","disableRippleChanges","colorChanges","firstChange","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","length","Math","min","activeItem","_keydown","keyCode","manager","previousFocusIndex","hasModifier","hasModifierKey","SPACE","ENTER","isTyping","_toggleFocusedOption","preventDefault","HOME","END","setFirstItemActive","setLastItemActive","A","find","onKeydown","UP_ARROW","DOWN_ARROW","shiftKey","_getSelectedOptionValues","emit","_onFocus","activeIndex","setActiveItem","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","forEach","correspondingOption","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","hasChanged","index","indexOf","setTimeout","(keydown)","aria-multiselectable","providers","String","Attribute","Output","MatListModule","NgModule","imports","MatLineModule","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","CommonModule","MatDividerModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material/core'), require('tslib'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/a11y'), require('@angular/cdk/coercion'), require('@angular/cdk/collections'), require('@angular/cdk/keycodes'), require('@angular/forms'), require('@angular/material/divider')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/list', ['exports', '@angular/common', '@angular/core', '@angular/material/core', 'tslib', 'rxjs', 'rxjs/operators', '@angular/cdk/a11y', '@angular/cdk/coercion', '@angular/cdk/collections', '@angular/cdk/keycodes', '@angular/forms', '@angular/material/divider'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.list = {}), global.ng.common, global.ng.core, global.ng.material.core, global.tslib, global.rxjs, global.rxjs.operators, global.ng.cdk.a11y, global.ng.cdk.coercion, global.ng.cdk.collections, global.ng.cdk.keycodes, global.ng.forms, global.ng.material.divider));\n}(this, (function (exports, common, core, core$1, tslib, rxjs, operators, a11y, coercion, collections, keycodes, forms, divider) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Boilerplate for applying mixins to MatList.\n    /** @docs-private */\n    var MatListBase = /** @class */ (function () {\n        function MatListBase() {\n        }\n        return MatListBase;\n    }());\n    var _MatListMixinBase = core$1.mixinDisableRipple(MatListBase);\n    // Boilerplate for applying mixins to MatListItem.\n    /** @docs-private */\n    var MatListItemBase = /** @class */ (function () {\n        function MatListItemBase() {\n        }\n        return MatListItemBase;\n    }());\n    var _MatListItemMixinBase = core$1.mixinDisableRipple(MatListItemBase);\n    var MatNavList = /** @class */ (function (_super) {\n        tslib.__extends(MatNavList, _super);\n        function MatNavList() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Emits when the state of the list changes. */\n            _this._stateChanges = new rxjs.Subject();\n            return _this;\n        }\n        MatNavList.prototype.ngOnChanges = function () {\n            this._stateChanges.next();\n        };\n        MatNavList.prototype.ngOnDestroy = function () {\n            this._stateChanges.complete();\n        };\n        MatNavList.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-nav-list',\n                        exportAs: 'matNavList',\n                        host: {\n                            'role': 'navigation',\n                            'class': 'mat-nav-list mat-list-base'\n                        },\n                        template: \"<ng-content></ng-content>\\n\\n\",\n                        inputs: ['disableRipple'],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n                    }] }\n        ];\n        return MatNavList;\n    }(_MatListMixinBase));\n    var MatList = /** @class */ (function (_super) {\n        tslib.__extends(MatList, _super);\n        function MatList(_elementRef) {\n            var _this = _super.call(this) || this;\n            _this._elementRef = _elementRef;\n            /** Emits when the state of the list changes. */\n            _this._stateChanges = new rxjs.Subject();\n            if (_this._getListType() === 'action-list') {\n                _elementRef.nativeElement.classList.add('mat-action-list');\n            }\n            return _this;\n        }\n        MatList.prototype._getListType = function () {\n            var nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n            if (nodeName === 'mat-list') {\n                return 'list';\n            }\n            if (nodeName === 'mat-action-list') {\n                return 'action-list';\n            }\n            return null;\n        };\n        MatList.prototype.ngOnChanges = function () {\n            this._stateChanges.next();\n        };\n        MatList.prototype.ngOnDestroy = function () {\n            this._stateChanges.complete();\n        };\n        MatList.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-list, mat-action-list',\n                        exportAs: 'matList',\n                        template: \"<ng-content></ng-content>\\n\\n\",\n                        host: {\n                            'class': 'mat-list mat-list-base'\n                        },\n                        inputs: ['disableRipple'],\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatList.ctorParameters = function () { return [\n            { type: core.ElementRef }\n        ]; };\n        return MatList;\n    }(_MatListMixinBase));\n    /**\n     * Directive whose purpose is to add the mat- CSS styling to this selector.\n     * @docs-private\n     */\n    var MatListAvatarCssMatStyler = /** @class */ (function () {\n        function MatListAvatarCssMatStyler() {\n        }\n        MatListAvatarCssMatStyler.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-list-avatar], [matListAvatar]',\n                        host: { 'class': 'mat-list-avatar' }\n                    },] }\n        ];\n        return MatListAvatarCssMatStyler;\n    }());\n    /**\n     * Directive whose purpose is to add the mat- CSS styling to this selector.\n     * @docs-private\n     */\n    var MatListIconCssMatStyler = /** @class */ (function () {\n        function MatListIconCssMatStyler() {\n        }\n        MatListIconCssMatStyler.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-list-icon], [matListIcon]',\n                        host: { 'class': 'mat-list-icon' }\n                    },] }\n        ];\n        return MatListIconCssMatStyler;\n    }());\n    /**\n     * Directive whose purpose is to add the mat- CSS styling to this selector.\n     * @docs-private\n     */\n    var MatListSubheaderCssMatStyler = /** @class */ (function () {\n        function MatListSubheaderCssMatStyler() {\n        }\n        MatListSubheaderCssMatStyler.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-subheader], [matSubheader]',\n                        host: { 'class': 'mat-subheader' }\n                    },] }\n        ];\n        return MatListSubheaderCssMatStyler;\n    }());\n    /** An item within a Material Design list. */\n    var MatListItem = /** @class */ (function (_super) {\n        tslib.__extends(MatListItem, _super);\n        function MatListItem(_element, _changeDetectorRef, navList, list) {\n            var _this = _super.call(this) || this;\n            _this._element = _element;\n            _this._isInteractiveList = false;\n            _this._destroyed = new rxjs.Subject();\n            _this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n            _this._list = navList || list;\n            // If no type attributed is specified for <button>, set it to \"button\".\n            // If a type attribute is already specified, do nothing.\n            var element = _this._getHostElement();\n            if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n                element.setAttribute('type', 'button');\n            }\n            if (_this._list) {\n                // React to changes in the state of the parent list since\n                // some of the item's properties depend on it (e.g. `disableRipple`).\n                _this._list._stateChanges.pipe(operators.takeUntil(_this._destroyed)).subscribe(function () {\n                    _changeDetectorRef.markForCheck();\n                });\n            }\n            return _this;\n        }\n        MatListItem.prototype.ngAfterContentInit = function () {\n            core$1.setLines(this._lines, this._element);\n        };\n        MatListItem.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n        /** Whether this list item should show a ripple effect when clicked. */\n        MatListItem.prototype._isRippleDisabled = function () {\n            return !this._isInteractiveList || this.disableRipple ||\n                !!(this._list && this._list.disableRipple);\n        };\n        /** Retrieves the DOM element of the component host. */\n        MatListItem.prototype._getHostElement = function () {\n            return this._element.nativeElement;\n        };\n        MatListItem.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                        exportAs: 'matListItem',\n                        host: {\n                            'class': 'mat-list-item',\n                            // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                            '[class.mat-list-item-avatar]': '_avatar || _icon',\n                            '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        },\n                        inputs: ['disableRipple'],\n                        template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        MatListItem.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: MatNavList, decorators: [{ type: core.Optional }] },\n            { type: MatList, decorators: [{ type: core.Optional }] }\n        ]; };\n        MatListItem.propDecorators = {\n            _lines: [{ type: core.ContentChildren, args: [core$1.MatLine, { descendants: true },] }],\n            _avatar: [{ type: core.ContentChild, args: [MatListAvatarCssMatStyler,] }],\n            _icon: [{ type: core.ContentChild, args: [MatListIconCssMatStyler,] }]\n        };\n        return MatListItem;\n    }(_MatListItemMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** @docs-private */\n    var MatSelectionListBase = /** @class */ (function () {\n        function MatSelectionListBase() {\n        }\n        return MatSelectionListBase;\n    }());\n    var _MatSelectionListMixinBase = core$1.mixinDisableRipple(MatSelectionListBase);\n    /** @docs-private */\n    var MatListOptionBase = /** @class */ (function () {\n        function MatListOptionBase() {\n        }\n        return MatListOptionBase;\n    }());\n    var _MatListOptionMixinBase = core$1.mixinDisableRipple(MatListOptionBase);\n    /** @docs-private */\n    var MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n        provide: forms.NG_VALUE_ACCESSOR,\n        useExisting: core.forwardRef(function () { return MatSelectionList; }),\n        multi: true\n    };\n    /** Change event that is being fired whenever the selected state of an option changes. */\n    var MatSelectionListChange = /** @class */ (function () {\n        function MatSelectionListChange(\n        /** Reference to the selection list that emitted the event. */\n        source, \n        /** Reference to the option that has been changed. */\n        option) {\n            this.source = source;\n            this.option = option;\n        }\n        return MatSelectionListChange;\n    }());\n    /**\n     * Component for list-options of selection-list. Each list-option can automatically\n     * generate a checkbox and can put current item into the selectionModel of selection-list\n     * if the current item is selected.\n     */\n    var MatListOption = /** @class */ (function (_super) {\n        tslib.__extends(MatListOption, _super);\n        function MatListOption(_element, _changeDetector, \n        /** @docs-private */\n        selectionList) {\n            var _this = _super.call(this) || this;\n            _this._element = _element;\n            _this._changeDetector = _changeDetector;\n            _this.selectionList = selectionList;\n            _this._selected = false;\n            _this._disabled = false;\n            _this._hasFocus = false;\n            /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n            _this.checkboxPosition = 'after';\n            /**\n             * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n             * in the first cycle.\n             */\n            _this._inputsInitialized = false;\n            return _this;\n        }\n        Object.defineProperty(MatListOption.prototype, \"color\", {\n            /** Theme color of the list option. This sets the color of the checkbox. */\n            get: function () { return this._color || this.selectionList.color; },\n            set: function (newValue) { this._color = newValue; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatListOption.prototype, \"value\", {\n            /** Value of the option */\n            get: function () { return this._value; },\n            set: function (newValue) {\n                if (this.selected && newValue !== this.value && this._inputsInitialized) {\n                    this.selected = false;\n                }\n                this._value = newValue;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatListOption.prototype, \"disabled\", {\n            /** Whether the option is disabled. */\n            get: function () { return this._disabled || (this.selectionList && this.selectionList.disabled); },\n            set: function (value) {\n                var newValue = coercion.coerceBooleanProperty(value);\n                if (newValue !== this._disabled) {\n                    this._disabled = newValue;\n                    this._changeDetector.markForCheck();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MatListOption.prototype, \"selected\", {\n            /** Whether the option is selected. */\n            get: function () { return this.selectionList.selectedOptions.isSelected(this); },\n            set: function (value) {\n                var isSelected = coercion.coerceBooleanProperty(value);\n                if (isSelected !== this._selected) {\n                    this._setSelected(isSelected);\n                    this.selectionList._reportValueChange();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatListOption.prototype.ngOnInit = function () {\n            var _this = this;\n            var list = this.selectionList;\n            if (list._value && list._value.some(function (value) { return list.compareWith(value, _this._value); })) {\n                this._setSelected(true);\n            }\n            var wasSelected = this._selected;\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            Promise.resolve().then(function () {\n                if (_this._selected || wasSelected) {\n                    _this.selected = true;\n                    _this._changeDetector.markForCheck();\n                }\n            });\n            this._inputsInitialized = true;\n        };\n        MatListOption.prototype.ngAfterContentInit = function () {\n            core$1.setLines(this._lines, this._element);\n        };\n        MatListOption.prototype.ngOnDestroy = function () {\n            var _this = this;\n            if (this.selected) {\n                // We have to delay this until the next tick in order\n                // to avoid changed after checked errors.\n                Promise.resolve().then(function () {\n                    _this.selected = false;\n                });\n            }\n            var hadFocus = this._hasFocus;\n            var newActiveItem = this.selectionList._removeOptionFromList(this);\n            // Only move focus if this option was focused at the time it was destroyed.\n            if (hadFocus && newActiveItem) {\n                newActiveItem.focus();\n            }\n        };\n        /** Toggles the selection state of the option. */\n        MatListOption.prototype.toggle = function () {\n            this.selected = !this.selected;\n        };\n        /** Allows for programmatic focusing of the option. */\n        MatListOption.prototype.focus = function () {\n            this._element.nativeElement.focus();\n        };\n        /**\n         * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n         * @docs-private\n         */\n        MatListOption.prototype.getLabel = function () {\n            return this._text ? (this._text.nativeElement.textContent || '') : '';\n        };\n        /** Whether this list item should show a ripple effect when clicked. */\n        MatListOption.prototype._isRippleDisabled = function () {\n            return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n        };\n        MatListOption.prototype._handleClick = function () {\n            if (!this.disabled) {\n                this.toggle();\n                // Emit a change event if the selected state of the option changed through user interaction.\n                this.selectionList._emitChangeEvent(this);\n            }\n        };\n        MatListOption.prototype._handleFocus = function () {\n            this.selectionList._setFocusedOption(this);\n            this._hasFocus = true;\n        };\n        MatListOption.prototype._handleBlur = function () {\n            this.selectionList._onTouched();\n            this._hasFocus = false;\n        };\n        /** Retrieves the DOM element of the component host. */\n        MatListOption.prototype._getHostElement = function () {\n            return this._element.nativeElement;\n        };\n        /** Sets the selected state of the option. Returns whether the value has changed. */\n        MatListOption.prototype._setSelected = function (selected) {\n            if (selected === this._selected) {\n                return false;\n            }\n            this._selected = selected;\n            if (selected) {\n                this.selectionList.selectedOptions.select(this);\n            }\n            else {\n                this.selectionList.selectedOptions.deselect(this);\n            }\n            this._changeDetector.markForCheck();\n            return true;\n        };\n        /**\n         * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n         * used to trigger an update of the list option if the disabled state of the selection list\n         * changed.\n         */\n        MatListOption.prototype._markForCheck = function () {\n            this._changeDetector.markForCheck();\n        };\n        MatListOption.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-list-option',\n                        exportAs: 'matListOption',\n                        inputs: ['disableRipple'],\n                        host: {\n                            'role': 'option',\n                            'class': 'mat-list-item mat-list-option',\n                            '(focus)': '_handleFocus()',\n                            '(blur)': '_handleBlur()',\n                            '(click)': '_handleClick()',\n                            '[class.mat-list-item-disabled]': 'disabled',\n                            '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                            // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                            // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                            // its theme.\n                            '[class.mat-primary]': 'color === \"primary\"',\n                            // Even though accent is the default, we need to set this class anyway, because the  list might\n                            // be placed inside a parent that has one of the other colors with a higher specificity.\n                            '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                            '[class.mat-warn]': 'color === \"warn\"',\n                            '[attr.aria-selected]': 'selected',\n                            '[attr.aria-disabled]': 'disabled',\n                            '[attr.tabindex]': '-1',\n                        },\n                        template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        /** @nocollapse */\n        MatListOption.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: core.ChangeDetectorRef },\n            { type: MatSelectionList, decorators: [{ type: core.Inject, args: [core.forwardRef(function () { return MatSelectionList; }),] }] }\n        ]; };\n        MatListOption.propDecorators = {\n            _avatar: [{ type: core.ContentChild, args: [MatListAvatarCssMatStyler,] }],\n            _icon: [{ type: core.ContentChild, args: [MatListIconCssMatStyler,] }],\n            _lines: [{ type: core.ContentChildren, args: [core$1.MatLine, { descendants: true },] }],\n            _text: [{ type: core.ViewChild, args: ['text',] }],\n            checkboxPosition: [{ type: core.Input }],\n            color: [{ type: core.Input }],\n            value: [{ type: core.Input }],\n            disabled: [{ type: core.Input }],\n            selected: [{ type: core.Input }]\n        };\n        return MatListOption;\n    }(_MatListOptionMixinBase));\n    /**\n     * Material Design list component where each item is a selectable option. Behaves as a listbox.\n     */\n    var MatSelectionList = /** @class */ (function (_super) {\n        tslib.__extends(MatSelectionList, _super);\n        function MatSelectionList(_element, \n        // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n        tabIndex, _changeDetector) {\n            var _this = _super.call(this) || this;\n            _this._element = _element;\n            _this._changeDetector = _changeDetector;\n            /** Emits a change event whenever the selected state of an option changes. */\n            _this.selectionChange = new core.EventEmitter();\n            /**\n             * Tabindex of the selection list.\n             * @breaking-change 11.0.0 Remove `tabIndex` input.\n             */\n            _this.tabIndex = 0;\n            /** Theme color of the selection list. This sets the checkbox color for all list options. */\n            _this.color = 'accent';\n            /**\n             * Function used for comparing an option against the selected value when determining which\n             * options should appear as selected. The first argument is the value of an options. The second\n             * one is a value from the selected value. A boolean must be returned.\n             */\n            _this.compareWith = function (a1, a2) { return a1 === a2; };\n            _this._disabled = false;\n            /** The currently selected options. */\n            _this.selectedOptions = new collections.SelectionModel(true);\n            /** The tabindex of the selection list. */\n            _this._tabIndex = -1;\n            /** View to model callback that should be called whenever the selected options change. */\n            _this._onChange = function (_) { };\n            /** Emits when the list has been destroyed. */\n            _this._destroyed = new rxjs.Subject();\n            /** View to model callback that should be called if the list or its options lost focus. */\n            _this._onTouched = function () { };\n            return _this;\n        }\n        Object.defineProperty(MatSelectionList.prototype, \"disabled\", {\n            /** Whether the selection list is disabled. */\n            get: function () { return this._disabled; },\n            set: function (value) {\n                this._disabled = coercion.coerceBooleanProperty(value);\n                // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n                // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n                // changed its state. Since we know that a change to `disabled` property of the list affects\n                // the state of the options, we manually mark each option for check.\n                this._markOptionsForCheck();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MatSelectionList.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            this._keyManager = new a11y.FocusKeyManager(this.options)\n                .withWrap()\n                .withTypeAhead()\n                // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n                // screenreader users, that allows reading the different options of the list.\n                .skipPredicate(function () { return false; })\n                .withAllowedModifierKeys(['shiftKey']);\n            if (this._value) {\n                this._setOptionsFromValues(this._value);\n            }\n            // If the user attempts to tab out of the selection list, allow focus to escape.\n            this._keyManager.tabOut.pipe(operators.takeUntil(this._destroyed)).subscribe(function () {\n                _this._allowFocusEscape();\n            });\n            // When the number of options change, update the tabindex of the selection list.\n            this.options.changes.pipe(operators.startWith(null), operators.takeUntil(this._destroyed)).subscribe(function () {\n                _this._updateTabIndex();\n            });\n            // Sync external changes to the model back to the options.\n            this.selectedOptions.changed.pipe(operators.takeUntil(this._destroyed)).subscribe(function (event) {\n                var e_1, _a, e_2, _b;\n                if (event.added) {\n                    try {\n                        for (var _c = tslib.__values(event.added), _d = _c.next(); !_d.done; _d = _c.next()) {\n                            var item = _d.value;\n                            item.selected = true;\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                if (event.removed) {\n                    try {\n                        for (var _e = tslib.__values(event.removed), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var item = _f.value;\n                            item.selected = false;\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            });\n        };\n        MatSelectionList.prototype.ngOnChanges = function (changes) {\n            var disableRippleChanges = changes['disableRipple'];\n            var colorChanges = changes['color'];\n            if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n                (colorChanges && !colorChanges.firstChange)) {\n                this._markOptionsForCheck();\n            }\n        };\n        MatSelectionList.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._isDestroyed = true;\n        };\n        /** Focuses the selection list. */\n        MatSelectionList.prototype.focus = function (options) {\n            this._element.nativeElement.focus(options);\n        };\n        /** Selects all of the options. */\n        MatSelectionList.prototype.selectAll = function () {\n            this._setAllOptionsSelected(true);\n        };\n        /** Deselects all of the options. */\n        MatSelectionList.prototype.deselectAll = function () {\n            this._setAllOptionsSelected(false);\n        };\n        /** Sets the focused option of the selection-list. */\n        MatSelectionList.prototype._setFocusedOption = function (option) {\n            this._keyManager.updateActiveItem(option);\n        };\n        /**\n         * Removes an option from the selection list and updates the active item.\n         * @returns Currently-active item.\n         */\n        MatSelectionList.prototype._removeOptionFromList = function (option) {\n            var optionIndex = this._getOptionIndex(option);\n            if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n                // Check whether the option is the last item\n                if (optionIndex > 0) {\n                    this._keyManager.updateActiveItem(optionIndex - 1);\n                }\n                else if (optionIndex === 0 && this.options.length > 1) {\n                    this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n                }\n            }\n            return this._keyManager.activeItem;\n        };\n        /** Passes relevant key presses to our key manager. */\n        MatSelectionList.prototype._keydown = function (event) {\n            var keyCode = event.keyCode;\n            var manager = this._keyManager;\n            var previousFocusIndex = manager.activeItemIndex;\n            var hasModifier = keycodes.hasModifierKey(event);\n            switch (keyCode) {\n                case keycodes.SPACE:\n                case keycodes.ENTER:\n                    if (!hasModifier && !manager.isTyping()) {\n                        this._toggleFocusedOption();\n                        // Always prevent space from scrolling the page since the list has focus\n                        event.preventDefault();\n                    }\n                    break;\n                case keycodes.HOME:\n                case keycodes.END:\n                    if (!hasModifier) {\n                        keyCode === keycodes.HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                        event.preventDefault();\n                    }\n                    break;\n                case keycodes.A:\n                    if (keycodes.hasModifierKey(event, 'ctrlKey') && !manager.isTyping()) {\n                        this.options.find(function (option) { return !option.selected; }) ? this.selectAll() : this.deselectAll();\n                        event.preventDefault();\n                    }\n                    break;\n                default:\n                    manager.onKeydown(event);\n            }\n            if ((keyCode === keycodes.UP_ARROW || keyCode === keycodes.DOWN_ARROW) && event.shiftKey &&\n                manager.activeItemIndex !== previousFocusIndex) {\n                this._toggleFocusedOption();\n            }\n        };\n        /** Reports a value change to the ControlValueAccessor */\n        MatSelectionList.prototype._reportValueChange = function () {\n            // Stop reporting value changes after the list has been destroyed. This avoids\n            // cases where the list might wrongly reset its value once it is removed, but\n            // the form control is still live.\n            if (this.options && !this._isDestroyed) {\n                var value = this._getSelectedOptionValues();\n                this._onChange(value);\n                this._value = value;\n            }\n        };\n        /** Emits a change event if the selected state of an option changed. */\n        MatSelectionList.prototype._emitChangeEvent = function (option) {\n            this.selectionChange.emit(new MatSelectionListChange(this, option));\n        };\n        /**\n         * When the selection list is focused, we want to move focus to an option within the list. Do this\n         * by setting the appropriate option to be active.\n         */\n        MatSelectionList.prototype._onFocus = function () {\n            var activeIndex = this._keyManager.activeItemIndex;\n            if (!activeIndex || (activeIndex === -1)) {\n                // If there is no active index, set focus to the first option.\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                // Otherwise, set focus to the active option.\n                this._keyManager.setActiveItem(activeIndex);\n            }\n        };\n        /** Implemented as part of ControlValueAccessor. */\n        MatSelectionList.prototype.writeValue = function (values) {\n            this._value = values;\n            if (this.options) {\n                this._setOptionsFromValues(values || []);\n            }\n        };\n        /** Implemented as a part of ControlValueAccessor. */\n        MatSelectionList.prototype.setDisabledState = function (isDisabled) {\n            this.disabled = isDisabled;\n        };\n        /** Implemented as part of ControlValueAccessor. */\n        MatSelectionList.prototype.registerOnChange = function (fn) {\n            this._onChange = fn;\n        };\n        /** Implemented as part of ControlValueAccessor. */\n        MatSelectionList.prototype.registerOnTouched = function (fn) {\n            this._onTouched = fn;\n        };\n        /** Sets the selected options based on the specified values. */\n        MatSelectionList.prototype._setOptionsFromValues = function (values) {\n            var _this = this;\n            this.options.forEach(function (option) { return option._setSelected(false); });\n            values.forEach(function (value) {\n                var correspondingOption = _this.options.find(function (option) {\n                    // Skip options that are already in the model. This allows us to handle cases\n                    // where the same primitive value is selected multiple times.\n                    return option.selected ? false : _this.compareWith(option.value, value);\n                });\n                if (correspondingOption) {\n                    correspondingOption._setSelected(true);\n                }\n            });\n        };\n        /** Returns the values of the selected options. */\n        MatSelectionList.prototype._getSelectedOptionValues = function () {\n            return this.options.filter(function (option) { return option.selected; }).map(function (option) { return option.value; });\n        };\n        /** Toggles the state of the currently focused option if enabled. */\n        MatSelectionList.prototype._toggleFocusedOption = function () {\n            var focusedIndex = this._keyManager.activeItemIndex;\n            if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n                var focusedOption = this.options.toArray()[focusedIndex];\n                if (focusedOption && !focusedOption.disabled) {\n                    focusedOption.toggle();\n                    // Emit a change event because the focused option changed its state through user\n                    // interaction.\n                    this._emitChangeEvent(focusedOption);\n                }\n            }\n        };\n        /**\n         * Sets the selected state on all of the options\n         * and emits an event if anything changed.\n         */\n        MatSelectionList.prototype._setAllOptionsSelected = function (isSelected) {\n            // Keep track of whether anything changed, because we only want to\n            // emit the changed event when something actually changed.\n            var hasChanged = false;\n            this.options.forEach(function (option) {\n                if (option._setSelected(isSelected)) {\n                    hasChanged = true;\n                }\n            });\n            if (hasChanged) {\n                this._reportValueChange();\n            }\n        };\n        /**\n         * Utility to ensure all indexes are valid.\n         * @param index The index to be checked.\n         * @returns True if the index is valid for our list of options.\n         */\n        MatSelectionList.prototype._isValidIndex = function (index) {\n            return index >= 0 && index < this.options.length;\n        };\n        /** Returns the index of the specified list option. */\n        MatSelectionList.prototype._getOptionIndex = function (option) {\n            return this.options.toArray().indexOf(option);\n        };\n        /** Marks all the options to be checked in the next change detection run. */\n        MatSelectionList.prototype._markOptionsForCheck = function () {\n            if (this.options) {\n                this.options.forEach(function (option) { return option._markForCheck(); });\n            }\n        };\n        /**\n         * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n         * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n         * the list, creating a focus trap if it user tries to tab away.\n         */\n        MatSelectionList.prototype._allowFocusEscape = function () {\n            var _this = this;\n            this._tabIndex = -1;\n            setTimeout(function () {\n                _this._tabIndex = 0;\n                _this._changeDetector.markForCheck();\n            });\n        };\n        /** Updates the tabindex based upon if the selection list is empty. */\n        MatSelectionList.prototype._updateTabIndex = function () {\n            this._tabIndex = (this.options.length === 0) ? -1 : 0;\n        };\n        MatSelectionList.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-selection-list',\n                        exportAs: 'matSelectionList',\n                        inputs: ['disableRipple'],\n                        host: {\n                            'role': 'listbox',\n                            'class': 'mat-selection-list mat-list-base',\n                            '(focus)': '_onFocus()',\n                            '(blur)': '_onTouched()',\n                            '(keydown)': '_keydown($event)',\n                            'aria-multiselectable': 'true',\n                            '[attr.aria-disabled]': 'disabled.toString()',\n                            '[attr.tabindex]': '_tabIndex',\n                        },\n                        template: '<ng-content></ng-content>',\n                        encapsulation: core.ViewEncapsulation.None,\n                        providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        MatSelectionList.ctorParameters = function () { return [\n            { type: core.ElementRef },\n            { type: String, decorators: [{ type: core.Attribute, args: ['tabindex',] }] },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        MatSelectionList.propDecorators = {\n            options: [{ type: core.ContentChildren, args: [MatListOption, { descendants: true },] }],\n            selectionChange: [{ type: core.Output }],\n            tabIndex: [{ type: core.Input }],\n            color: [{ type: core.Input }],\n            compareWith: [{ type: core.Input }],\n            disabled: [{ type: core.Input }]\n        };\n        return MatSelectionList;\n    }(_MatSelectionListMixinBase));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatListModule = /** @class */ (function () {\n        function MatListModule() {\n        }\n        MatListModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [core$1.MatLineModule, core$1.MatRippleModule, core$1.MatCommonModule, core$1.MatPseudoCheckboxModule, common.CommonModule],\n                        exports: [\n                            MatList,\n                            MatNavList,\n                            MatListItem,\n                            MatListAvatarCssMatStyler,\n                            core$1.MatLineModule,\n                            core$1.MatCommonModule,\n                            MatListIconCssMatStyler,\n                            MatListSubheaderCssMatStyler,\n                            core$1.MatPseudoCheckboxModule,\n                            MatSelectionList,\n                            MatListOption,\n                            divider.MatDividerModule\n                        ],\n                        declarations: [\n                            MatList,\n                            MatNavList,\n                            MatListItem,\n                            MatListAvatarCssMatStyler,\n                            MatListIconCssMatStyler,\n                            MatListSubheaderCssMatStyler,\n                            MatSelectionList,\n                            MatListOption\n                        ],\n                    },] }\n        ];\n        return MatListModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MAT_SELECTION_LIST_VALUE_ACCESSOR = MAT_SELECTION_LIST_VALUE_ACCESSOR;\n    exports.MatList = MatList;\n    exports.MatListAvatarCssMatStyler = MatListAvatarCssMatStyler;\n    exports.MatListIconCssMatStyler = MatListIconCssMatStyler;\n    exports.MatListItem = MatListItem;\n    exports.MatListModule = MatListModule;\n    exports.MatListOption = MatListOption;\n    exports.MatListSubheaderCssMatStyler = MatListSubheaderCssMatStyler;\n    exports.MatNavList = MatNavList;\n    exports.MatSelectionList = MatSelectionList;\n    exports.MatSelectionListChange = MatSelectionListChange;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-list.umd.js.map\n"]}